version: "3.9"

services:
  kafka:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    container_name: kafka
    ports:
      - "9092:9092"
      - "7071:7071" # prometheus
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml
    networks:
      - kafka-network

  kafka-cli:
    image: frser/kafka-cli
    environment:
      BOOTSTRAP_SERVER: kafka:9092
      CREATE_TOPICS: >
        todo:1:1
    networks:
      - kafka-network

  todo-service:
    container_name: todo-service
    build:
      context: ./todo-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_URLS=http://+:5000
      - KafkaBootstrapServer=kafka:9092
      - ZIPKIN_URL=http://zipkin:9411
    depends_on:
      - kafka
      - zipkin
    networks:
      - kafka-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    command: ["mongod", "--bind_ip", "0.0.0.0"]
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - kafka-network

  mongodb-exporter:
    container_name: mongodb-exporter
    image: bitnami/mongodb-exporter
    restart: always
    ports:
      - 9216:9216
    networks:
      - kafka-network
    environment:
      MONGODB_URI: mongodb://prometheus:9081u43981eh@mongodb:27017
    depends_on:
      - mongodb

  todo-persistent:
    container_name: todo-persistent
    build:
      context: ./todo-persistent
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
      - mongodb
    networks:
      - kafka-network

  todo-spa:
    build:
      context: ./todo-spa
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
      - "9464:9464" # prometheus
    depends_on:
      - todo-persistent
      - todo-service
    networks:
      - kafka-network
    environment:
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans

  # observability
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3333:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasource:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - kafka-network

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - kafka-network

volumes:
  mongo-data:

networks:
  kafka-network:
